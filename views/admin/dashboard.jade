doctype html
html
  head
    title Admin Dashboard
    style.
      body { margin: 0; display: flex; }
      .sidebar { width: 200px; padding: 20px; background: #f5f5f5; }
      .content { flex: 1; padding: 20px; }
      .menu-item { cursor: pointer; padding: 10px; }
      .menu-item:hover { background: #e0e0e0; }
      table { width: 100%; border-collapse: collapse; margin-top: 20px; }
      th, td { padding: 8px; border: 1px solid #ddd; }
      .modal { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%;
        background: rgba(0,0,0,0.5); }
      .modal-content { background: white; padding: 20px; width: 500px; margin: 50px auto;
        border-radius: 4px; }
      .form-group { margin-bottom: 15px; }
      label { display: block; margin-bottom: 5px; }
      input { 
        width: calc(100% - 16px); 
        padding: 8px;
        margin-bottom: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
      }
      .btn-primary { 
        background: #4285f4; 
        color: white; 
        border: none; 
        padding: 8px 15px;
        cursor: pointer; 
        border-radius: 4px;
        margin-bottom: 20px;
      }
      .btn-primary:hover { background: #3367d6; }
      .modal-buttons {
        display: flex;
        gap: 10px;
        justify-content: flex-end;
        margin-top: 20px;
      }

  body
    .sidebar
      .menu-item(onclick="showVpnRoutes()") 线路列表
      .menu-item(onclick="showUsers()") 用户管理
    .content#content

    #addRouteModal.modal
      .modal-content
        h2 添加线路
        form#addRouteForm
          .form-group
            label(for="alias") 别名
            input(type="text", name="alias", required)
          .form-group
            label(for="ip") IP地址
            input(type="text", name="ip", required)
          .form-group
            label(for="port") 端口
            input(type="text", name="port", required)
          .form-group
            label(for="password") 密码
            input(type="text", name="password", required)
          .form-group
            label(for="encryptionMethod") 加密方式
            input(type="text", name="encryptionMethod", required)
          .form-group
            label(for="extraInfo") 额外信息 (JSON)
            input(type="text", name="extraInfo", value="{}")
          
          button.btn-primary(type="submit") 保存
          button.btn-primary(type="button", onclick="closeModal()") 取消

    script.
      async function showVpnRoutes() {
        const res = await fetch('/admin/vpn-routes');
        const data = await res.json();
        if (data.success) {
          const html = `
            <h2>线路列表</h2>
            <button class="btn-primary" onclick="showAddRouteModal()">添加线路</button>
            <table>
              <tr>
                <th>别名</th>
                <th>IP</th>
                <th>端口</th>
                <th>加密方式</th>
                <th>操作</th>
              </tr>
              ${data.data.map(route => `
                <tr>
                  <td>${route.alias}</td>
                  <td>${route.ip}</td>
                  <td>${route.port}</td>
                  <td>${route.encryptionMethod}</td>
                  <td>
                    <button onclick="editRoute('${route._id}')">编辑</button>
                    <button onclick="deleteRoute('${route._id}')">删除</button>
                  </td>
                </tr>
              `).join('')}
            </table>
          `;
          document.getElementById('content').innerHTML = html;
        }
      }

      function showAddRouteModal() {
        document.getElementById('addRouteModal').style.display = 'block';
      }

      async function deleteRoute(id) {
        if (!confirm('确定要删除该线路吗？')) {
          return;
        }

        try {
          const res = await fetch(`/admin/vpn-routes/${id}`, {
            method: 'DELETE'
          });
          
          const result = await res.json();
          if (result.success) {
            showVpnRoutes(); // Refresh the list
          } else {
            alert(result.message || '删除失败');
          }
        } catch (err) {
          console.error('Failed to delete route:', err);
          alert('删除失败，请重试');
        }
      }

      async function editRoute(id) {
        try {
          // First get the route data
          const res = await fetch(`/admin/vpn-routes/${id}`);
          const result = await res.json();
          
          if (result.success) {
            const route = result.data;
            // Fill the form with route data
            const form = document.getElementById('addRouteForm');
            form.alias.value = route.alias;
            form.ip.value = route.ip;
            form.port.value = route.port;
            form.password.value = route.password;
            form.encryptionMethod.value = route.encryptionMethod;
            form.extraInfo.value = route.extraInfo;
            
            // Add route ID to form for update
            form.dataset.routeId = id;
            
            // Show modal
            showAddRouteModal();
          }
        } catch (err) {
          console.error('Failed to get route:', err);
          alert('获取线路信息失败，请重试');
        }
      }

      // Update form submit handler to handle both create and update
      document.getElementById('addRouteForm').onsubmit = async (e) => {
        e.preventDefault();
        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData.entries());
        const routeId = e.target.dataset.routeId;
        
        try {
          const res = await fetch(`/admin/vpn-routes${routeId ? '/' + routeId : ''}`, {
            method: routeId ? 'PUT' : 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
          });
          
          const result = await res.json();
          if (result.success) {
            closeModal();
            showVpnRoutes(); // Refresh the list
            // Clear route ID from form
            e.target.dataset.routeId = '';
          } else {
            alert(result.message || '操作失败');
          }
        } catch (err) {
          console.error('Failed to save route:', err);
          alert('操作失败，请重试');
        }
      };

      function closeModal() {
        const form = document.getElementById('addRouteForm');
        form.reset();
        form.dataset.routeId = '';
        document.getElementById('addRouteModal').style.display = 'none';
      }

      async function showUsers() {
        const res = await fetch('/admin/users');
        const data = await res.json();
        if (data.success) {
          const html = `
            <h2>用户管理</h2>
            <table>
              <tr>
                <th>邮箱</th>
                <th>Token</th>
                <th>注册IP</th>
                <th>最后登录IP</th>
                <th>注册时间</th>
              </tr>
              ${data.data.map(user => `
                <tr>
                  <td>${user.email}</td>
                  <td>${user.token || '-'}</td>
                  <td>${user.registerIp || '-'}</td>
                  <td>${user.lastLoginIp || '-'}</td>
                  <td>${new Date(user.createdAt).toLocaleString()}</td>
                </tr>
              `).join('')}
            </table>
          `;
          document.getElementById('content').innerHTML = html;
        }
      }